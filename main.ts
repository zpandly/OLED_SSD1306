//% color=190 weight=100 icon="\uf1ec" block="液晶显示"
namespace oled_driver {
    let show: number[] = [
        0x00, 0x00, 0x00, 0x06, 0x0A, 0xFE, 0x0A, 0xC6, 0x00, 0xE0, 0x00, 0xF0, 0x00, 0xF8, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xFE, 0x7D, 0xBB, 0xC7, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xEF, 0xC7,
        0xBB, 0x7D, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x08, 0x0C, 0xFE, 0xFE, 0x0C, 0x08, 0x20, 0x60, 0xFE, 0xFE, 0x60, 0x20, 0x00, 0x00, 0x00,
        0x78, 0x48, 0xFE, 0x82, 0xBA, 0xBA, 0x82, 0xBA, 0xBA, 0x82, 0xBA, 0xBA, 0x82, 0xBA, 0xBA, 0x82,
        0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
        0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
        0x03, 0x03, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0xFE, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
        0x03, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xFE,
        0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0xFE, 0xFF,
        0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x0C, 0x0C, 0x0C,
        0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xE1, 0xE1, 0x00,
        0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
        0x00, 0x00, 0xFF, 0xFF, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0xFF, 0xFF, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x0F, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x0F, 0x00, 0x00, 0x0F,
        0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
        0x18, 0x18, 0x1F, 0x0F, 0x00, 0x00, 0x0F, 0x1F, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
        0x18, 0x1F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x92, 0x8A, 0x86, 0x00,
        0x00, 0x7C, 0x82, 0x82, 0x82, 0x7C, 0x00, 0xFE, 0x00, 0x82, 0x92, 0xAA, 0xC6, 0x00, 0x00, 0xC0,
        0xC0, 0x00, 0x7C, 0x82, 0x82, 0x82, 0x7C, 0x00, 0x00, 0x02, 0x02, 0x02, 0xFE, 0x00, 0x00, 0xC0,
        0xC0, 0x00, 0x7C, 0x82, 0x82, 0x82, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0xA4, 0x2E, 0x24, 0xE4,
        0x24, 0x2E, 0xA4, 0x24, 0x00, 0x00, 0x00, 0xF8, 0x4A, 0x4C, 0x48, 0xF8, 0x48, 0x4C, 0x4A, 0xF8,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0x10, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00,
        0xC0, 0x20, 0x10, 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12,
        0x0A, 0x07, 0x02, 0x7F, 0x02, 0x07, 0x0A, 0x02, 0x00, 0x00, 0x00, 0x0B, 0x0A, 0x0A, 0x0A, 0x7F,
        0x0A, 0x0A, 0x0A, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x20, 0x40, 0x40, 0x40, 0x50,
        0x20, 0x5F, 0x80, 0x00, 0x1F, 0x20, 0x40, 0x40, 0x40, 0x50, 0x20, 0x5F, 0x80, 0x00, 0x00, 0x00        
    ]
    function I2C_Start() {
        pins.digitalWritePin(DigitalPin.P1, 1);//SCL_1();
        pins.digitalWritePin(DigitalPin.P0, 1);//SDA_1();
        pins.digitalWritePin(DigitalPin.P0, 0);//SDA_0();
        pins.digitalWritePin(DigitalPin.P1, 0);//SCL_0();    
    }

    function I2C_Stop() {
        pins.digitalWritePin(DigitalPin.P1, 0);//SCL_0();
        pins.digitalWritePin(DigitalPin.P0, 0);//SDA_0();
        pins.digitalWritePin(DigitalPin.P1, 1);//SCL_1();
        pins.digitalWritePin(DigitalPin.P0, 1);//SDA_1();        
    }

    function I2C_WriteByte(data: number) {
        for (let i = 0; i < 8; i++) {
            if (data & 0x80) {
                pins.digitalWritePin(DigitalPin.P0, 1);//SDA_1();
            } else {
                pins.digitalWritePin(DigitalPin.P0, 0);//SDA_0();
            }
            pins.digitalWritePin(DigitalPin.P1, 1);//SCL_1();
            pins.digitalWritePin(DigitalPin.P1, 0);//SCL_0();
            data <<= 1;
        }
        pins.digitalWritePin(DigitalPin.P0, 1);//SDA_1();
        pins.digitalWritePin(DigitalPin.P1, 1);//SCL_1();
        pins.digitalWritePin(DigitalPin.P1, 0);//SCL_0();
    }

    function I2C_WriteCommand(command: number) {
        I2C_Start();
        I2C_WriteByte(0x78);            //Slave address,SA0=0
        I2C_WriteByte(0x00);			//write command
        I2C_WriteByte(command);
        I2C_Stop();
    }

    function I2C_WriteData(data: number) {
        I2C_Start();
        I2C_WriteByte(0x78);			//D/C#=0; R/W#=0
        I2C_WriteByte(0x40);			//write data
        I2C_WriteByte(data);
        I2C_Stop();
    }

    //% blockId="oled_driver_Initialized" block="屏幕初始化"
    export function Initialized() {
        I2C_WriteCommand(0xAE);   //display off
        I2C_WriteCommand(0x20);	//Set Memory Addressing Mode	
        I2C_WriteCommand(0x10);	//00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mode (RESET);11,Invalid
        I2C_WriteCommand(0xb0);	//Set Page Start Address for Page Addressing Mode,0-7
        I2C_WriteCommand(0xc8);	//Set COM Output Scan Direction
        I2C_WriteCommand(0x00);//---set low column address
        I2C_WriteCommand(0x10);//---set high column address
        I2C_WriteCommand(0x40);//--set start line address
        I2C_WriteCommand(0x81);//--set contrast control register
        I2C_WriteCommand(0xdf);
        I2C_WriteCommand(0xa1);//--set segment re-map 0 to 127
        I2C_WriteCommand(0xa6);//--set normal display
        I2C_WriteCommand(0xa8);//--set multiplex ratio(1 to 64)
        I2C_WriteCommand(0x3F);//
        I2C_WriteCommand(0xa4);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
        I2C_WriteCommand(0xd3);//-set display offset
        I2C_WriteCommand(0x00);//-not offset
        I2C_WriteCommand(0xd5);//--set display clock divide ratio/oscillator frequency
        I2C_WriteCommand(0xf0);//--set divide ratio
        I2C_WriteCommand(0xd9);//--set pre-charge period
        I2C_WriteCommand(0x22); //
        I2C_WriteCommand(0xda);//--set com pins hardware configuration
        I2C_WriteCommand(0x12);
        I2C_WriteCommand(0xdb);//--set vcomh
        I2C_WriteCommand(0x20);//0x20,0.77xVcc
        I2C_WriteCommand(0x8d);//--set DC-DC enable
        I2C_WriteCommand(0x14);//
        I2C_WriteCommand(0xaf);//--turn on oled panel  
    }

    //% blockId="osd_driver_Picture" block="显示图片"
    export function Picture() {
        let i= 0;
        for (let y = 0; y < 8; y++) {
            I2C_WriteCommand(0xb0 + y);
            I2C_WriteCommand(0x0);
            I2C_WriteCommand(0x10);
            for (let x = 0; x < 132; x++) {
                I2C_WriteData(0x00);
            }
        }
        I2C_WriteCommand(0xb0);
        I2C_WriteCommand(0x0);
        I2C_WriteCommand(0x10);
    }

    //% block="Debug Write data %data"
    export function WriteData(data:number) {
        I2C_WriteData(data);
    }
}  